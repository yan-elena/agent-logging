package event.eventInfo;

import jason.asSyntax.Literal;
import jason.asSyntax.Trigger;

/**
 * A class that save the relevant information about a signal that is generated by an agent.
 */
public class AgentSignalInfo {

    private final String functor;
    private final String source;

    /**
     * Creates a new instance of {@link AgentSignalInfo} from the given signal trigger.
     * @param trigger the signal trigger from which extract the information
     */
    public AgentSignalInfo(Trigger trigger) {
        Literal literal = trigger.getLiteral();
        this.functor = literal.toString().split("\\[")[0];
        this.source = literal.getAnnot("source").getTerm(0).toString();
    }

    /**
     * Retrieves the functor of the signal.
     * @return the signal functor
     */
    public String getFunctor() {
        return functor;
    }

    /**
     * Retrieves the source from which the signal is sent.
     * @return source
     */
    public String getSource() {
        return source;
    }
}
